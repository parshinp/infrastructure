variables:
#  VERSION: 1.0.${CI_PIPELINE_ID}
   MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
   SAST_JAVA_VERSION: 11
   SECURE_LOG_LEVEL: "debug"
   JAVA_OPTS: -XX:MaxRAMPercentage=90.0
   SAST_EXCLUDED_ANALYZERS: "eslint-sast,nodejs-scan-sast"
   
include:
  - template: Security/SAST.gitlab-ci.yml
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'  

stages:
   - build-backend-jar
   - test
   - build-backend-docker
   - deploy-docker-compose

build-jar:
   stage: build-backend-jar
   script:       
      - java --version
      - pwd
      - echo "ARTIFACT_JOB_ID=${CI_JOB_ID}" > CI_JOB_ID.txt  # сохранение номера задачи в файл, чтобы в дальнейшем использовать для копирования артефакта 
      - cd backend
      - mvn package -Dversion.application=${VERSION} -Dmaven.repo.local=${MAVEN_REPO_PATH}
      - mkdir ${CI_PROJECT_DIR}/sausage-store-$VERSION
      - cp ${CI_PROJECT_DIR}/backend/target/sausage-store-report-$VERSION.jar ${CI_PROJECT_DIR}/sausage-store-report-$VERSION/sausage-store-report-$VERSION.jar
   rules:
      - changes:
           - backend/*
   artifacts:
     paths:
      - ${MAVEN_REPO_PATH} # сохранение зависимостей для SAST#
      - sausage-store-report-$VERSION/sausage-store-report-$VERSION.jar

spotbugs-sast:
  dependencies:
    - build-jar
  before_script:
    - cd ${CI_PROJECT_DIR}/sausage-store-$VERSION
    - cp sausage-store-$VERSION.jar /builds/parshin/sausage-store/backend/sausage-store-$VERSION.jar
  variables:
    COMPILE: "false"

build-backend:
  dependencies:
    - build-jar
  stage: build-backend-docker
  image: docker:20.10.12-dind-rootless
  before_script:
    - cd backend-report
    - until docker info; do sleep 1; done
    # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/sausage-backend-report:$VERSION
      .
      - docker-compose push $CI_REGISTRY_IMAGE/sausage-backend-report:$VERSION

deploy-backend-compose:
  stage: deploy-docker-compose
  image: alpine:3.15.0
  before_script:
    - apk add openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh ${DEV_USER}@${DEV_HOST}
      "export "VERSION=${VERSION}";
       export "SPRING_DATASOURCE_URL=${PSQL_HOST}";
       export "CI_REGISTRY_USER=${CI_REGISTRY_USER}";
       export "CI_JOB_TOKEN=${CI_JOB_TOKEN}";
       export "CI_REGISTRY=${CI_REGISTRY}";
       export "SPRING_VAULT_HOST=${SPRING_VAULT_HOST}";
       export "SPRING_VAULT_TOKEN=${SPRING_VAULT_TOKEN}";
      /bin/bash -s " < ./compose_rep_deploy.sh 
  environment:
    name: prod-backend-report-docker