variables:
##  VERSION: 1.0.${CI_PIPELINE_ID}
   MAVEN_REPO_PATH: ${CI_PROJECT_DIR}/.m2/repository
   SAST_JAVA_VERSION: 11
   SECURE_LOG_LEVEL: "debug"
   JAVA_OPTS: -XX:MaxRAMPercentage=90.0
   SAST_EXCLUDED_ANALYZERS: "eslint-sast,nodejs-scan-sast"
   
include:
  - project: 'templates/ci'
    file: 'DockerInDockerTemplate.yml'  

stages:
   - build-backend-docker
   - deploy-docker

build-backend:
  stage: build-backend-docker
  image: docker:20.10.12-dind-rootless
  before_script:
    - cd backend-report
    - until docker info; do sleep 1; done
    # переменные CI_REGISTRY_USER, CI_REGISTRY_PASSWORD, CI_REGISTRY генерятся Гитлабом, их задавать не надо
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - >
      docker build
      --build-arg VERSION=$VERSION
      --tag $CI_REGISTRY_IMAGE/sausage-backend-report:$VERSION
      .
    - docker push $CI_REGISTRY_IMAGE/sausage-backend-report:$VERSION

deploy-backend:
  stage: deploy-docker
  image: alpine:3.15.0
  before_script:
    - apk add openssh-client bash
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" >> ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh ${DEV_USER}@${DEV_HOST}
      "export "VERSION=${VERSION}";
       export "SPRING_DATASOURCE_URL=${PSQL_HOST}";
       export "CI_REGISTRY_USER=${CI_REGISTRY_USER}";
       export "CI_JOB_TOKEN=${CI_JOB_TOKEN}";
       export "CI_REGISTRY=${CI_REGISTRY}";
       export "SPRING_VAULT_HOST=${SPRING_VAULT_HOST}";
       export "SPRING_VAULT_TOKEN=${SPRING_VAULT_TOKEN}";
      /bin/bash -s " < ./compose_rep_deploy.sh 
  environment:
    name: prod-backend-report-docker